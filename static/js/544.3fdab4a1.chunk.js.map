{"version":3,"file":"static/js/544.3fdab4a1.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","service/serviceAPI.js"],"sourcesContent":["export const Loader = () => {\n  <div>Loading...</div>;\n};\nexport default Loader;","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nexport const Li = styled.li`\n  list-style: none;\n  padding: 3px;\n  margin: 0;\n\n`;\nexport const Links = styled(Link)`\n  text-decoration: none;\n  color: black;\n  \n`;\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0;\n  margin: 0;\n\n`;\n\nexport const Card = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  margin-bottom: 20px;\n  text-align: center;\n  width: 200px;\n  height: 355px;\n  \n  :hover {\n    scale: 1.05;\n    font-weight: bold;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { AiOutlineFileImage } from 'react-icons/ai';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Card, Li, Links, List } from './MoviesList.styled';\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <List>\n        {movies.map(({ id, title, poster_path }) => {\n          return (\n            <Li key={id}>\n              <Links to={`/movies/${id}`} state={{ from: location }}>\n                <Card>\n                  {poster_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${poster_path}`}\n                      alt={title}\n                    />\n                  ) : (\n                    <AiOutlineFileImage size={200} />\n                  )}\n                  {title}\n                </Card>\n              </Links>\n            </Li>\n          );\n        })}\n      </List>\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import ListMovies from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { fetchTrending } from 'service/serviceAPI';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setLoading(true);\n    fetchTrending()\n      .then(respMovies => {\n        setMovies(respMovies.results);\n      })\n      .catch(error => error.message)\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div>\n        <h2\n          style={{\n            textAlign: 'left',\n            paddingTop: 20,\n            paddingBottom: 20,\n          }}\n        >\n          Trending today\n        </h2>\n        <ListMovies movies={movies} />\n        {loading && <Loader />}\n      </div>\n    </>\n  );\n};\nexport default Home;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '06d7b2a77c3489d1e99f70e4696501be';\n\nexport const fetchSearchMovies = async query => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1&language=en-US&include_adult=false`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/trending/movie/week?api_key=${API_KEY}&page=1`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchDetailsMovie = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}?api_key=${API_KEY}&page=1&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchCast = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const resp = await axios.get(\n      `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return resp.data;\n  } catch (error) {\n    throw new Error(error.statusText);\n  }\n};"],"names":["Li","styled","_templateObject","_taggedTemplateLiteral","Links","Link","_templateObject2","List","_templateObject3","Card","_templateObject4","_ref","movies","location","useLocation","_jsxs","_Fragment","children","_jsx","map","_ref2","id","title","poster_path","to","concat","state","from","src","alt","AiOutlineFileImage","size","Outlet","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","loading","setLoading","useEffect","fetchTrending","then","respMovies","results","catch","error","message","finally","style","textAlign","paddingTop","paddingBottom","ListMovies","Loader","BASE_URL","API_KEY","fetchSearchMovies","_asyncToGenerator","_regeneratorRuntime","_callee","query","resp","_context","prev","next","axios","sent","abrupt","data","t0","Error","statusText","stop","_x","apply","arguments","_callee2","_context2","fetchDetailsMovie","_ref3","_callee3","_context3","_x2","fetchCast","_ref4","_callee4","_context4","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}